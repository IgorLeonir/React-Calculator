{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Igor\\\\Desktop\\\\React Calculator\\\\teste\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [calc, setCalc] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const ops = ['/', '*', '+', '-', '.'];\n\n  const updateCalc = value => {\n    if (ops.includes(value) && calc === '' || ops.includes(value) && ops.includes(calc.slice(-1))) {\n      return;\n    }\n\n    setCalc(calc + value);\n\n    if (!ops.includes(value)) {\n      setResult(eval(calc + value).toFixed(2).toString());\n    }\n  };\n\n  const createDigits = () => {\n    const digits = [];\n\n    for (let i = 1; i < 10; i++) {\n      digits.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateCalc(i.toString()),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this));\n    }\n\n    return digits;\n  };\n\n  const calculate = () => {\n    function arredonda(calc) {\n      let maxCasas = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n      let n = parseFloat(s.replace(',', '.')); // deixar o nÃºmero com apenas 'maxCasas' casas decimais, sem arredondar\n\n      let fator = Math.pow(10, maxCasas);\n      n = Math.floor(n * fator) / fator;\n      let opcoes = {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxCasas,\n        useGrouping: false\n      };\n      return n.toLocaleString('pt-BR', opcoes);\n    }\n\n    setCalc(eval(calc).toFixed(2).toString());\n  };\n\n  const deleteLast = () => {\n    if (calc == '') {\n      return;\n    }\n\n    const value = calc.slice(0, -1);\n    setCalc(value);\n  };\n\n  const clear = () => {\n    setCalc('');\n    setResult('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display\",\n        children: [result ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"(\", result, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this) : '', \"\\xA0\", calc || \"0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"operators\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateCalc('/'),\n          children: \"/ \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateCalc('*'),\n          children: \"* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateCalc('+'),\n          children: \"+ \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateCalc('-'),\n          children: \"- \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteLast,\n          children: \"DEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clear,\n          children: \"CLEAR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"digits\",\n        children: [createDigits(), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateCalc('0'),\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateCalc('.'),\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: calculate,\n          children: \"=\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9U/d6CHR7WUh3xAyDzH68Kd1wgs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Igor/Desktop/React Calculator/teste/src/App.js"],"names":["useState","App","calc","setCalc","result","setResult","ops","updateCalc","value","includes","slice","eval","toFixed","toString","createDigits","digits","i","push","calculate","arredonda","maxCasas","n","parseFloat","s","replace","fator","Math","pow","floor","opcoes","minimumFractionDigits","maximumFractionDigits","useGrouping","toLocaleString","deleteLast","clear"],"mappings":"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","sourcesContent":["import { useState } from 'react';\n\nfunction App() {\n  const [calc, setCalc] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  const ops = ['/', '*', '+', '-', '.'];\n\n  const updateCalc = value => {\n    if (\n      ops.includes(value) && calc === '' ||\n      ops.includes(value) && ops.includes(calc.slice(-1)\n      )\n    ) {\n      return;\n    }\n    setCalc(calc + value);\n\n    if (!ops.includes(value)) {\n      setResult(eval(calc + value).toFixed(2).toString())\n    }\n  }\n\n\n  const createDigits = () => {\n    const digits = [];\n\n    for (let i = 1; i < 10; i++) {\n      digits.push(\n        <button\n          onClick={() => updateCalc(i.toString())}\n          key={i}>\n          {i}\n        </button>\n      )\n    }\n\n    return digits\n  }\n\n  const calculate = () => {\n    function arredonda(calc, maxCasas = 2) {\n      let n = parseFloat(s.replace(',', '.'));\n\n      // deixar o nÃºmero com apenas 'maxCasas' casas decimais, sem arredondar\n      let fator = Math.pow(10, maxCasas);\n      n = Math.floor(n * fator) / fator;\n\n      let opcoes = {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxCasas,\n        useGrouping: false\n      };\n      return n.toLocaleString('pt-BR', opcoes);\n    }\n    setCalc(eval(calc).toFixed(2).toString())\n  }\n\n  const deleteLast = () => {\n    if (calc == '') {\n      return;\n    }\n\n    const value = calc.slice(0, -1);\n\n    setCalc(value);\n  }\n\n  const clear = () => {\n    setCalc('');\n    setResult('');\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"calculator\">\n        <div className=\"display\">\n          {result ? <span>({result})</span> : ''}\n          &nbsp;\n          {calc || \"0\"}\n        </div>\n\n        <div className=\"operators\">\n          <button onClick={() => updateCalc('/')}>\n            / </button>\n          <button onClick={() => updateCalc('*')}>\n            * </button>\n          <button onClick={() => updateCalc('+')}>\n            + </button>\n          <button onClick={() => updateCalc('-')}>\n            - </button>\n\n          <button onClick={deleteLast}>DEL</button>\n\n          <button onClick={clear}>CLEAR</button>\n\n        </div>\n\n        <div className=\"digits\">\n          {createDigits()}\n          <button onClick={() => updateCalc('0')}>\n            0</button>\n          <button onClick={() => updateCalc('.')}>\n            .</button>\n\n          <button onClick={calculate}>=</button>\n        </div>\n\n      </div>\n    </div >\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}