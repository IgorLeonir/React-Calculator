{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Igor\\\\Desktop\\\\React Calculator\\\\teste\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [calc, setCalc] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const ops = ['/', '*', '+', '-', '.'];\n\n  const updateCalc = value => {\n    if (ops.includes(value) && calc === '' || ops.includes(value) && ops.includes(calc.slice(-1))) {\n      return;\n    }\n\n    setCalc(calc + value);\n\n    if (!ops.includes(value)) {\n      setResult(eval(calc + value).toString());\n    }\n  };\n\n  const createDigits = () => {\n    const digits = [];\n\n    for (let i = 1; i < 10; i++) {\n      digits.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateCalc(i.toString()),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this));\n    }\n\n    return digits;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display\",\n        children: [result ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this) : '', \" \", calc || \"0\", \"& nbsp;\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"operators\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateCalc('/'),\n          children: \"/ \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateCalc('*'),\n          children: \"* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateCalc('+'),\n          children: \"+ \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateCalc('-'),\n          children: \"- \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"DEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"digits\",\n        children: [createDigits(), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateCalc('0'),\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateCalc('.'),\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"=\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9U/d6CHR7WUh3xAyDzH68Kd1wgs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Igor/Desktop/React Calculator/teste/src/App.js"],"names":["useState","App","calc","setCalc","result","setResult","ops","updateCalc","value","includes","slice","eval","toString","createDigits","digits","i","push"],"mappings":"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","sourcesContent":["import { useState } from 'react';\n\nfunction App() {\n  const [calc, setCalc] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  const ops = ['/', '*', '+', '-', '.'];\n\n  const updateCalc = value => {\n    if (\n      ops.includes(value) && calc === '' ||\n      ops.includes(value) && ops.includes(calc.slice(-1)\n      )\n    ) {\n      return;\n    }\n    setCalc(calc + value);\n\n    if (!ops.includes(value)) {\n      setResult(eval(calc + value).toString())\n    }\n  }\n\n\n  const createDigits = () => {\n    const digits = [];\n\n    for (let i = 1; i < 10; i++) {\n      digits.push(\n        <button\n          onClick={() => updateCalc(i.toString())}\n          key={i}>\n          {i}\n        </button>\n      )\n    }\n\n    return digits\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"calculator\">\n        <div className=\"display\">\n          {result ? <span>{result}</span> : ''} {calc || \"0\"}&\n          nbsp;\n        </div>\n\n        <div className=\"operators\">\n          <button onClick={() => updateCalc('/')}>\n            / </button>\n          <button onClick={() => updateCalc('*')}>\n            * </button>\n          <button onClick={() => updateCalc('+')}>\n            + </button>\n          <button onClick={() => updateCalc('-')}>\n            - </button>\n\n          <button>DEL</button>\n        </div>\n\n        <div className=\"digits\">\n          {createDigits()}\n          <button onClick={() => updateCalc('0')}>\n            0</button>\n          <button onClick={() => updateCalc('.')}>\n            .</button>\n\n          <button>=</button>\n        </div>\n\n      </div>\n    </div >\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}