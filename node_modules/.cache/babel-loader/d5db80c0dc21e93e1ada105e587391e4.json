{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Igor\\\\Desktop\\\\React Calculator\\\\teste\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [calc, setCalc] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const ops = ['/', '*', '+', '-', '.'];\n\n  const updateCalc = value => {\n    setCalc(calc + value);\n  };\n\n  const createDigits = () => {\n    const digits = [];\n\n    for (let i = 1; i < 10; i++) {\n      digits.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this));\n    }\n\n    return digits;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display\",\n        children: [result ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"(0)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this) : '', \" \", calc || \"0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"operators\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateCalc('/'),\n          children: \"/ \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateCalc('*'),\n          children: \"* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateCalc('+'),\n          children: \"+ \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateCalc('-'),\n          children: \"- \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"DEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"digits\",\n        children: [createDigits(), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"=\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9U/d6CHR7WUh3xAyDzH68Kd1wgs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Igor/Desktop/React Calculator/teste/src/App.js"],"names":["useState","App","calc","setCalc","result","setResult","ops","updateCalc","value","createDigits","digits","i","push"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMM,GAAG,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAAZ;;AAEA,QAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1BL,IAAAA,OAAO,CAACD,IAAI,GAAGM,KAAR,CAAP;AACD,GAFD;;AAKA,QAAMC,YAAY,GAAG,MAAM;AACzB,UAAMC,MAAM,GAAG,EAAf;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,MAAAA,MAAM,CAACE,IAAP,eACE;AAAA,kBAAiBD;AAAjB,SAAaA,CAAb;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;;AAED,WAAOD,MAAP;AACD,GAVD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,mBACGN,MAAM,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAsB,EAD/B,OACoCF,IAAI,IAAI,GAD5C;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,MAAMK,UAAU,CAAC,GAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAQ,UAAA,OAAO,EAAE,MAAMA,UAAU,CAAC,GAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAKE;AAAQ,UAAA,OAAO,EAAE,MAAMA,UAAU,CAAC,GAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAOE;AAAQ,UAAA,OAAO,EAAE,MAAMA,UAAU,CAAC,GAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAkBE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,mBACGE,YAAY,EADf,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAtDQR,G;;KAAAA,G;AAwDT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\n\nfunction App() {\n  const [calc, setCalc] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  const ops = ['/', '*', '+', '-', '.'];\n\n  const updateCalc = value => {\n    setCalc(calc + value);\n  }\n\n\n  const createDigits = () => {\n    const digits = [];\n\n    for (let i = 1; i < 10; i++) {\n      digits.push(\n        <button key={i}>{i}</button>\n      )\n    }\n\n    return digits\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"calculator\">\n        <div className=\"display\">\n          {result ? <span>(0)</span> : ''} {calc || \"0\"}\n        </div>\n\n        <div className=\"operators\">\n          <button onClick={() => updateCalc('/')}>\n            / </button>\n          <button onClick={() => updateCalc('*')}>\n            * </button>\n          <button onClick={() => updateCalc('+')}>\n            + </button>\n          <button onClick={() => updateCalc('-')}>\n            - </button>\n\n          <button>DEL</button>\n        </div>\n\n        <div className=\"digits\">\n          {createDigits()}\n          <button>0</button>\n          <button>.</button>\n          <button>=</button>\n        </div>\n\n      </div>\n    </div >\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}